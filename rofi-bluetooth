#! /usr/bin/env bash

divider="============"
exit="Exit"
back="Back"

function echoinfo() {
    echo -en "$1\0info\x1f$2\n"
}

function is_discoverable() {
    if bluetoothctl show | grep -iq "Discoverable: yes"; then
        echo "Discoverable: ON"
        return 0
    fi

    echo "Discoverable: OFF"
    return 1
}
discoverable=$(is_discoverable)

function is_powered() {
    if bluetoothctl show | grep -iq "Powered: yes"; then
        echo "Powered: ON"
        return 0
    fi

    echo "Powered: OFF"
    return 1
}
powered=$(is_powered)

function is_scanning() {
    if bluetoothctl show | grep -iq "Discovering: yes"; then
        echo "Scanning: ON"
        return 0
    fi

    echo "Scanning: OFF"
    return 1
}
scanning=$(is_scanning)

function is_pairable() {
    if bluetoothctl show | grep -iq "Pairable: yes"; then
        echo "Pairable: ON"
        return 0
    fi

    echo "Pairable: OFF"
    return 1
}
pairable=$(is_pairable)

function print_devices() {
    devices=$(bluetoothctl devices | cut -d ' ' -f3-)
    while read -r line; do
        echoinfo "$line" "$line"
    done <<<"$devices"
}

function menu_state() {
    print_devices
    echo $divider
    echo $powered
    echo $discoverable
    echo $scanning
    echo $pairable
    echo $exit
}

function is_paired() {
    if bluetoothctl info "$1" | grep -iq "Paired: yes"; then
        echo "Paired: Yes"
        return 0
    fi
    echo "Paired: No"
    return 1
}

function is_connected() {
    if bluetoothctl info "$1" | grep -iq "Connected: yes"; then
        echo "Connected: Yes"
        return 0
    fi
    echo "Connected: No"
    return 1
}
function is_trusted() {
    if bluetoothctl info "$1" | grep -iq "Trusted: yes"; then
        echo "Trusted: Yes"
        return 0
    fi
    echo "Trusted: No"
    return 1
}

function device_state() {
    device=$state
    mac=$(bluetoothctl devices | grep "$device" | awk '{print $2}')
    echo -en "\0prompt\x1f$device\n"
    # echo $mac
    paired=$(is_paired "$mac")
    connected=$(is_connected "$mac")
    trusted=$(is_trusted "$mac")
    echoinfo "$connected" "$device"
    echoinfo "$paired" $device
    echoinfo "$trusted" $device

    echoinfo $divider $device
    echo $back
    echo $exit
}

function main() {
    # echo $@ test
    SEL="$*"
    RET=$ROFI_RETV
    state=$ROFI_INFO

    echo -en "\0prompt\x1fBluetooth\n"

    # echo $state
    if [[ "$state" == "" ]]; then
        case "$SEL" in
            "" | "$divider" | "$back")
                menu_state
                ;;
            "$exit")
                exit 0
                ;;
            *)
                echo not yet implemented
                ;;
        esac
    else
        device_state $SEL
    fi
}

main $@
